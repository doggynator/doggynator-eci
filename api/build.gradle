/*buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.node-gradle:gradle-node-plugin:3.4.0"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.13.RELEASE"
  }
}*/

plugins {
	id 'com.github.ben-manes.versions' version '0.42.0'
	id "com.diffplug.spotless" version "6.11.0"
	id "org.springframework.boot" version "2.7.3"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "java"

group = 'com.doggynator'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

	implementation 'org.postgresql:postgresql'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("jar") {
	enabled = false
}

spotlessApply.dependsOn(spotlessCheck)
check.dependsOn(spotlessApply)

spotless {
  java {
	googleJavaFormat()
    importOrder('java', 'javax', 'com.doggynator', '', '\\#com.doggynator', '\\#')
    removeUnusedImports()
    formatAnnotations()
    licenseHeader '/* (C) Doggynator $YEAR */'
  }
}